; Sample supervisor config file.
;
; For more information on the config file, please see:
; http://supervisord.org/configuration.html
;

[inet_http_server]         ; inet (TCP) server disabled by default
port=127.0.0.1:9001        ; ip_address:port specifier, *:port for all iface
username=                  ; default is no username (open server)
password=                  ; default is no password (open server)

[supervisord]
logfile=/tmp/supervisord.log ; main log file; default $CWD/supervisord.log
logfile_maxbytes=50MB        ; max main logfile bytes b4 rotation; default 50MB
logfile_backups=10           ; # of main logfile backups; 0 means none, default 10
loglevel=info                ; log level; default info; others: debug,warn,trace
pidfile=/tmp/supervisord.pid ; supervisord pidfile; default supervisord.pid
nodaemon=false               ; start in foreground if true; default false
silent=false                 ; no logs to stdout if true; default false
minfds=1024                  ; min. avail startup file descriptors; default 1024
minprocs=200                 ; min. avail process descriptors;default 200

; The rpcinterface:supervisor section must remain in the config file for
; RPC (supervisorctl/web interface) to work.  Additional interfaces may be
; added by defining them in separate [rpcinterface:x] sections.

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

; The supervisorctl section configures how supervisorctl will connect to
; supervisord.  configure it match the settings in either the unix_http_server
; or inet_http_server section.

[supervisorctl]
serverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket
;serverurl=http://127.0.0.1:9001 ; use an http:// url to specify an inet socket
;username=user               ; should be same as in [*_http_server] if set
;password=123                ; should be same as in [*_http_server] if set
;prompt=mysupervisor         ; cmd line prompt (default "supervisor")
;history_file=~/.sc_history  ; use readline history if available

[program:cs_data_processor]
; args: instance# loglevel
command=/usr/bin/node /home/user/json-scada/src/cs_data_processor/cs_data_processor.js 1 1
autostart=true
numprocs=1                     ; number of processes copies to start (def 1)
directory=/home/user/json-scada/src/cs_data_processor/                ; directory to cwd to before exec (def no cwd)
user=user                   ; setuid to this UNIX account to run the program
redirect_stderr=true          ; redirect proc stderr to stdout (default false)
stdout_logfile=/home/user/json-scada/log/cs_data_processor.log    ; stdout log path, NONE for none; default AUTO
stdout_logfile_maxbytes=10MB   ; max # logfile bytes b4 rotation (default 50MB)
stdout_logfile_backups=10     ; # of stdout logfile backups (0 means none, default 10)
stdout_capture_maxbytes=10MB   ; number of bytes in 'capturemode' (default 0)

[program:cs_custom_processor]
; args: instance# loglevel
command=/usr/bin/node /home/user/json-scada/src/cs_custom_processor/cs_custom_processor.js 1 1
autostart=true
numprocs=1                     ; number of processes copies to start (def 1)
directory=/home/user/json-scada/src/cs_custom_processor/                ; directory to cwd to before exec (def no cwd)
user=user                   ; setuid to this UNIX account to run the program
redirect_stderr=true          ; redirect proc stderr to stdout (default false)
stdout_logfile=/home/user/json-scada/log/cs_custom_processor.log    ; stdout log path, NONE for none; default AUTO
stdout_logfile_maxbytes=10MB   ; max # logfile bytes b4 rotation (default 50MB)
stdout_logfile_backups=10     ; # of stdout logfile backups (0 means none, default 10)
stdout_capture_maxbytes=10MB   ; number of bytes in 'capturemode' (default 0)

[program:telegraf-listener]
; args: instance# loglevel
command=/usr/bin/node /home/user/json-scada/src/telegraf-listener/index.js 1 1
autostart=true
numprocs=1                     ; number of processes copies to start (def 1)
directory=/home/user/json-scada/src/telegraf-listener/                ; directory to cwd to before exec (def no cwd)
user=user                   ; setuid to this UNIX account to run the program
redirect_stderr=true          ; redirect proc stderr to stdout (default false)
stdout_logfile=/home/user/json-scada/log/telegraf-listener.log    ; stdout log path, NONE for none; default AUTO
stdout_logfile_maxbytes=10MB   ; max # logfile bytes b4 rotation (default 50MB)
stdout_logfile_backups=10     ; # of stdout logfile backups (0 means none, default 10)
stdout_capture_maxbytes=10MB   ; number of bytes in 'capturemode' (default 0)

[program:server_realtime_auth]
command=/usr/bin/node /home/user/json-scada/src/server_realtime_auth/index.js
autostart=true
numprocs=1                     ; number of processes copies to start (def 1)
directory=/home/user/json-scada/src/server_realtime_auth/                ; directory to cwd to before exec (def no cwd)
user=user                   ; setuid to this UNIX account to run the program
redirect_stderr=true          ; redirect proc stderr to stdout (default false)
stdout_logfile=/home/user/json-scada/log/server_realtime_auth.log    ; stdout log path, NONE for none; default AUTO
stdout_logfile_maxbytes=10MB   ; max # logfile bytes b4 rotation (default 50MB)
stdout_logfile_backups=10     ; # of stdout logfile backups (0 means none, default 10)
stdout_capture_maxbytes=10MB   ; number of bytes in 'capturemode' (default 0)

[program:mqtt-sparkplug]
; args: instance# loglevel
command=/usr/bin/node /home/user/json-scada/src/mqtt-sparkplug/index.js
autostart=true
numprocs=1                     ; number of processes copies to start (def 1)
directory=/home/user/json-scada/src/mqtt-sparkplug/                ; directory to cwd to before exec (def no cwd)
user=user                   ; setuid to this UNIX account to run the program
redirect_stderr=true          ; redirect proc stderr to stdout (default false)
stdout_logfile=/home/user/json-scada/log/mqtt-sparkplug.log    ; stdout log path, NONE for none; default AUTO
stdout_logfile_maxbytes=10MB   ; max # logfile bytes b4 rotation (default 50MB)
stdout_logfile_backups=10     ; # of stdout logfile backups (0 means none, default 10)
stdout_capture_maxbytes=10MB   ; number of bytes in 'capturemode' (default 0)

[program:iec104client]
; args: instance# loglevel
command=/home/user/json-scada/bin/iec104client 1 1 
autostart=true
numprocs=1                     ; number of processes copies to start (def 1)
directory=/home/user/json-scada/bin/                ; directory to cwd to before exec (def no cwd)
user=user                   ; setuid to this UNIX account to run the program
redirect_stderr=true          ; redirect proc stderr to stdout (default false)
stdout_logfile=/home/user/json-scada/log/iec104client.log    ; stdout log path, NONE for none; default AUTO
stdout_logfile_maxbytes=10MB   ; max # logfile bytes b4 rotation (default 50MB)
stdout_logfile_backups=10     ; # of stdout logfile backups (0 means none, default 10)
stdout_capture_maxbytes=10MB   ; number of bytes in 'capturemode' (default 0)

[program:calculations]
; args: instance# loglevel period
command=/home/user/json-scada/bin/calculations 1 1 2
autostart=true
numprocs=1                     ; number of processes copies to start (def 1)
directory=/home/user/json-scada/bin/                ; directory to cwd to before exec (def no cwd)
user=user                   ; setuid to this UNIX account to run the program
redirect_stderr=true          ; redirect proc stderr to stdout (default false)
stdout_logfile=/home/user/json-scada/log/calculations.log    ; stdout log path, NONE for none; default AUTO
stdout_logfile_maxbytes=10MB   ; max # logfile bytes b4 rotation (default 50MB)
stdout_logfile_backups=10     ; # of stdout logfile backups (0 means none, default 10)
stdout_capture_maxbytes=10MB   ; number of bytes in 'capturemode' (default 0)

[program:iec104server]
; args: instance# loglevel
command=/home/user/json-scada/bin/iec104server 1 1 
autostart=false
numprocs=1                     ; number of processes copies to start (def 1)
directory=/home/user/json-scada/bin/                ; directory to cwd to before exec (def no cwd)
user=user                   ; setuid to this UNIX account to run the program
redirect_stderr=true          ; redirect proc stderr to stdout (default false)
stdout_logfile=/home/user/json-scada/log/iec104server.log    ; stdout log path, NONE for none; default AUTO
stdout_logfile_maxbytes=10MB   ; max # logfile bytes b4 rotation (default 50MB)
stdout_logfile_backups=10     ; # of stdout logfile backups (0 means none, default 10)
stdout_capture_maxbytes=10MB   ; number of bytes in 'capturemode' (default 0)

[program:opcua_client]
; args: instance# loglevel
command=/home/user/json-scada/bin/OPC-UA-Client 1 1 
autostart=true
numprocs=1                     ; number of processes copies to start (def 1)
directory=/home/user/json-scada/bin/                ; directory to cwd to before exec (def no cwd)
user=user                   ; setuid to this UNIX account to run the program
redirect_stderr=true          ; redirect proc stderr to stdout (default false)
stdout_logfile=/home/user/json-scada/log/opcua_client.log    ; stdout log path, NONE for none; default AUTO
stdout_logfile_maxbytes=10MB   ; max # logfile bytes b4 rotation (default 50MB)
stdout_logfile_backups=10     ; # of stdout logfile backups (0 means none, default 10)
stdout_capture_maxbytes=10MB   ; number of bytes in 'capturemode' (default 0)

[program:opcua_server]
; args: instance# loglevel
command=/usr/bin/node /home/user/json-scada/src/OPC-UA-Server/index.js
autostart=false
numprocs=1                     ; number of processes copies to start (def 1)
directory=/home/user/json-scada/src/OPC-UA-Server/                ; directory to cwd to before exec (def no cwd)
user=user                   ; setuid to this UNIX account to run the program
redirect_stderr=true          ; redirect proc stderr to stdout (default false)
stdout_logfile=/home/user/json-scada/log/opcua_server.log    ; stdout log path, NONE for none; default AUTO
stdout_logfile_maxbytes=10MB   ; max # logfile bytes b4 rotation (default 50MB)
stdout_logfile_backups=10     ; # of stdout logfile backups (0 means none, default 10)
stdout_capture_maxbytes=10MB   ; number of bytes in 'capturemode' (default 0)

[program:plc4xclient]
; args: instance# loglevel
command=/home/user/json-scada/bin/plc4x-client 1 1 
autostart=false
numprocs=1                     ; number of processes copies to start (def 1)
directory=/home/user/json-scada/bin/                ; directory to cwd to before exec (def no cwd)
user=user                   ; setuid to this UNIX account to run the program
redirect_stderr=true          ; redirect proc stderr to stdout (default false)
stdout_logfile=/home/user/json-scada/log/plc4xclient.log    ; stdout log path, NONE for none; default AUTO
stdout_logfile_maxbytes=10MB   ; max # logfile bytes b4 rotation (default 50MB)
stdout_logfile_backups=10     ; # of stdout logfile backups (0 means none, default 10)
stdout_capture_maxbytes=10MB   ; number of bytes in 'capturemode' (default 0)

[program:process_pg_hist]
command=/home/user/json-scada/sql/process_pg_hist.sh
autostart=true
numprocs=1                     ; number of processes copies to start (def 1)
directory=/home/user/json-scada/sql/                ; directory to cwd to before exec (def no cwd)
user=user                   ; setuid to this UNIX account to run the program
redirect_stderr=true          ; redirect proc stderr to stdout (default false)
stdout_logfile=/home/user/json-scada/log/process_pg_hist.log    ; stdout log path, NONE for none; default AUTO
stdout_logfile_maxbytes=10MB   ; max # logfile bytes b4 rotation (default 50MB)
stdout_logfile_backups=10     ; # of stdout logfile backups (0 means none, default 10)
stdout_capture_maxbytes=10MB   ; number of bytes in 'capturemode' (default 0)

[program:process_pg_rtdata]
command=/home/user/json-scada/sql/process_pg_rtdata.sh
autostart=true
numprocs=1                     ; number of processes copies to start (def 1)
directory=/home/user/json-scada/sql/                ; directory to cwd to before exec (def no cwd)
user=user                   ; setuid to this UNIX account to run the program
redirect_stderr=true          ; redirect proc stderr to stdout (default false)
stdout_logfile=/home/user/json-scada/log/process_pg_rtdata.log    ; stdout log path, NONE for none; default AUTO
stdout_logfile_maxbytes=10MB   ; max # logfile bytes b4 rotation (default 50MB)
stdout_logfile_backups=10     ; # of stdout logfile backups (0 means none, default 10)
stdout_capture_maxbytes=10MB   ; number of bytes in 'capturemode' (default 0)

;[program:mongowr]
;; args: instance# loglevel
;command=/usr/bin/node /home/user/json-scada/src/mongowr/index.js
;autostart=false
;numprocs=1                     ; number of processes copies to start (def 1)
;directory=/home/user/json-scada/src/mongowr/                ; directory to cwd to before exec (def no cwd)
;user=user                   ; setuid to this UNIX account to run the program
;redirect_stderr=true          ; redirect proc stderr to stdout (default false)
;stdout_logfile=/home/user/json-scada/log/mongowr.log    ; stdout log path, NONE for none; default AUTO
;stdout_logfile_maxbytes=10MB   ; max # logfile bytes b4 rotation (default 50MB)
;stdout_logfile_backups=10     ; # of stdout logfile backups (0 means none, default 10)
;stdout_capture_maxbytes=10MB   ; number of bytes in 'capturemode' (default 0)

;[program:mongofw]
;; args: instance# loglevel
;command=/usr/bin/node /home/user/json-scada/src/mongofw/index.js
;autostart=false
;numprocs=1                     ; number of processes copies to start (def 1)
;directory=/home/user/json-scada/src/mongofw/                ; directory to cwd to before exec (def no cwd)
;user=user                   ; setuid to this UNIX account to run the program
;redirect_stderr=true          ; redirect proc stderr to stdout (default false)
;stdout_logfile=/home/user/json-scada/log/mongofw.log    ; stdout log path, NONE for none; default AUTO
;stdout_logfile_maxbytes=10MB   ; max # logfile bytes b4 rotation (default 50MB)
;stdout_logfile_backups=10     ; # of stdout logfile backups (0 means none, default 10)
;stdout_capture_maxbytes=10MB   ; number of bytes in 'capturemode' (default 0)

;[program:metabase]
;command=/usr/bin/java -jar /home/user/json-scada/metabase/metabase.jar
;;process_name=%(program_name)s ; process_name expr (default %(program_name)s)
;numprocs=1                     ; number of processes copies to start (def 1)
;environment=MB_JETTY_PORT="3001",MB_DB_TYPE="postgres",MB_DB_DBNAME="metabaseappdb",MB_DB_PORT="5432",MB_DB_USER="postgres",MB_DB_PASS="",MB_DB_HOST="localhost",MB_CHECK_FOR_UPDATES="false"
;directory=/home/user/json-scada/metabase/    ; directory to cwd to before exec (def no cwd)
;user=user                    ; setuid to this UNIX account to run the program
;stdout_logfile=/home/user/json-scada/log/metabase.log    ; stdout log path, NONE for none;
;stdout_logfile_maxbytes=1MB    ; max # logfile bytes b4 rotation (default 50MB)
;stdout_logfile_backups=0       ; # of stdout logfile backups (0 means none, default 10)
;stdout_capture_maxbytes=1MB    ; number of bytes in 'capturemode' (default 0)
;stderr_logfile=/home/user/json-scada/log/metabase.err    ; stderr log path, NONE for none;
;stderr_logfile_maxbytes=1MB    ; max # logfile bytes b4 rotation (default 50MB)
;stderr_logfile_backups=0       ; # of stderr logfile backups (0 means none, default 10)
;stderr_capture_maxbytes=1MB    ; number of bytes in 'capturemode' (default 0)
