# {json:scada} Docker Compilation for Linux x64 - (c) 2020-2025 - Ricardo L. Olsen 
# Requires Internet connection!

services:

  dotnet_compile:
    image: mcr.microsoft.com/dotnet/sdk:8.0
    container_name: js_dotnet_compile
    command: sh -c "cd /src/lib60870.netcore/lib60870.netcore/ && 
                    dotnet build --self-contained --runtime linux-x64 -c Release -o /publish_bin/ &&
                    cd /src/lib60870.netcore/iec101client/ &&
                    dotnet publish --self-contained --runtime linux-x64 -p:PublishReadyToRun=true -c Release -o /publish_bin/ &&
                    rm -rf obj bin &&
                    cd /src/lib60870.netcore/iec101server/ &&
                    dotnet publish --self-contained --runtime linux-x64 -p:PublishReadyToRun=true -c Release -o /publish_bin/ &&
                    rm -rf obj bin &&
                    cd /src/lib60870.netcore/iec104client/ &&
                    dotnet publish --self-contained --runtime linux-x64 -p:PublishReadyToRun=true -c Release -o /publish_bin/ &&
                    rm -rf obj bin &&
                    cd /src/lib60870.netcore/iec104server/ &&
                    dotnet publish --self-contained --runtime linux-x64 -p:PublishReadyToRun=true -c Release -o /publish_bin/ &&
                    rm -rf obj bin &&
                    cd /src/lib60870.netcore/lib60870.netcore/ &&
                    rm -rf obj bin &&
                    cd /src/OPC-UA-Client/ &&
                    rm -rf obj bin && dotnet clean &&
                    dotnet publish --self-contained --runtime linux-x64 -p:PublishReadyToRun=true -c Release -o /publish_bin/ &&
                    rm -rf obj bin &&
                    cd /src/libplctag/libplctag.NET/src/libplctag &&
                    dotnet build --self-contained --runtime linux-x64 -c Release -o /publish_bin/ &&
                    cd /src/libplctag/PLCTagsClient &&
                    dotnet publish --self-contained --runtime linux-x64 -p:PublishReadyToRun=true -c Release -o /publish_bin/ &&
                    rm -rf obj bin &&
                    cd /src/libplctag/libplctag.NET/src/libplctag &&
                    rm -rf obj bin &&
                    apt-get update &&
                    apt-get -y install build-essential cmake sasl2-bin libsasl2-dev &&
                    cd /src/libiec61850 &&
                    mkdir -p build &&
                    cd build &&
                    cmake .. &&
                    make &&
                    cp src/libiec61850.so src/libiec61850.so.1.6.0 /publish_bin/ &&
                    cd ../dotnet/core/2.0/IEC61850.NET.core.2.0 &&
                    dotnet publish --no-self-contained --runtime linux-x64 -c Release &&
                    cd /src/iec61850_client &&
                    dotnet publish --no-self-contained --runtime linux-x64 -p:PublishReadyToRun=true -c Release -o /publish_bin/ &&
                    rm -rf obj bin &&
                    cd /src/libiec61850/dotnet/core/2.0/IEC61850.NET.core.2.0/ &&
                    rm -rf obj bin &&
                    cd /src/libiec61850 &&
                    rm -rf .install &&
                    cd /src/mongo-cxx-driver/mongo-cxx-driver/build &&
                    sed -i '/   ${fetch_args}/d' ../cmake/FetchMongoC.cmake &&
                    cmake .. -DCMAKE_INSTALL_PREFIX=../../../mongo-cxx-driver-lib -DCMAKE_CXX_STANDARD=17 -DBUILD_VERSION=4.0.0 -DBUILD_SHARED_LIBS=OFF -DBUILD_SHARED_AND_STATIC_LIBS=OFF &&
                    cmake --build . --config Release &&
                    cmake --build . --target install --config Release &&
                    cd /src/dnp3/opendnp3 &&
                    mkdir -p build && 
                    cd build && 
                    cmake -DDNP3_EXAMPLES=OFF -DDNP3_TLS=ON .. && 
                    make && 
                    cd /src/dnp3/Dnp3Server/ && 
                    sed -i 's/mongo-cxx-driver-lib\/lib64\//mongo-cxx-driver-lib\/lib\//g' ./CMakeLists.txt && 
                    sed -i '/sasl2/a  snappy' ./CMakeLists.txt && 
                    mkdir -p build && 
                    cd build && 
                    cmake .. && 
                    make && 
                    cp Dnp3Server ../../../../bin/"
    environment:
      - DOTNET_CLI_TELEMETRY_OPTOUT=1
    volumes:
      - ../src/iec61850_client:/src/iec61850_client
      - ../src/libiec61850:/src/libiec61850
      - ../src/lib60870.netcore:/src/lib60870.netcore
      - ../src/OPC-UA-Client:/src/OPC-UA-Client
      - ../src/libplctag:/src/libplctag
      - ../src/mongo-cxx-driver:/src/mongo-cxx-driver
      - ../src/dnp3:/src/dnp3
      - ../demo-docker/bin:/publish_bin

  # NOTICE Dnp3Client and OPC-DA-Client are Windows-only, so it can only run in docker/linux using Wine.
  dotnet_compile_win:
    image: mcr.microsoft.com/dotnet/sdk:6.0
    container_name: js_dotnet_compile_win
    command: sh -c "cd /src/OPC-DA-Client/ &&
                    dotnet publish --self-contained --runtime win-x64 -p:PublishReadyToRun=false -f net6.0-windows -c Release -o /publish_bin_win/ OPC-DA-Client.csproj &&
                    rm -rf obj bin &&
                    cd /src/dnp3/Dnp3Client/ &&
                    dotnet publish --self-contained --runtime win-x64 -p:PublishReadyToRun=false -c Release -o /publish_bin_win/ Dnp3Client.csproj &&
                    rm -rf obj bin &&
                    cp Dependencies/OpenSSL/*.dll /publish_bin_win/ "
    environment:
      - DOTNET_CLI_TELEMETRY_OPTOUT=1
    volumes:
      - ../demo-docker/bin_win:/publish_bin_win
      - ../src/dnp3:/src/dnp3
      - ./Dnp3Client.csproj:/src/dnp3/Dnp3Client/Dnp3Client.csproj
      - ../src/OPC-DA-Client:/src/OPC-DA-Client
      - ./OPC-DA-Client.csproj:/src/OPC-DA-Client/OPC-DA-Client.csproj
      - ../src/opcdaaehda-client-solution-net:/src/opcdaaehda-client-solution-net

  calculations_compile:
    image: golang:alpine
    container_name: js_calculations_compile
    command: sh -c "apk update &&
                    apk add --no-cache git && 
                    go env -w GO111MODULE=auto &&
                    cd /go/src/calculations/ && 
                    go mod tidy && 
                    go build && 
                    cp calculations /publish_bin/"
    volumes:
      - ../src/calculations:/go/src/calculations
      - ../demo-docker/bin:/publish_bin

  i104m_compile:
    image: golang:alpine
    container_name: js_i104m_compile
    command: sh -c "apk update &&
                    apk add --no-cache git && 
                    go env -w GO111MODULE=auto &&
                    cd /go/src/i104m/ &&
                    go mod tidy && 
                    go build && 
                    cp i104m /publish_bin/"
    volumes:
      - ../src/i104m:/go/src/i104m
      - ../demo-docker/bin:/publish_bin

  plc4x_compile:
    image: golang:alpine
    container_name: js_pcl4x_compile
    command: sh -c "apk update &&
                    apk add --no-cache git libpcap-dev gcc musl-dev && 
                    go env -w GO111MODULE=auto CGO_ENABLED=1 &&
                    cd /go/src/plc4x-client/ &&
                    go mod tidy && 
                    CGO_ENABLED=1 go build && 
                    cp plc4x-client /publish_bin/"
    volumes:
      - ../src/plc4x-client:/go/src/plc4x-client
      - ../demo-docker/bin:/publish_bin

  nodejs_update:
    image: node:22-alpine
    container_name: js_nodejs_update
    command:  sh -c "apk add --update npm && npm install -g npm && 
                     cd /cs_data_processor && npm install && chmod -R 777 node_modules &&
                     cd /cs_custom_processor && npm install && chmod -R 777 node_modules &&
                     cd /config_server_for_excel && npm install && chmod -R 777 node_modules &&
                     cd /server_realtime_auth && npm install && chmod -R 777 node_modules &&
                     cd /alarm_beep && npm install && chmod -R 777 node_modules &&
                     cd /oshmi2json && npm install && chmod -R 777 node_modules &&
                     cd /telegraf-listener && npm install && chmod -R 777 node_modules &&
                     cd /OPC-UA-Server && npm install && chmod -R 777 node_modules &&
                     cd /mqtt-sparkplug && npm install && chmod -R 777 node_modules &&
                     cd /AdminUI && npm install && npm run build && chmod -R 777 node_modules &&
                     cd /custom-developments/basic_bargraph && npm install && npx astro telemetry disable && npm run build &&
                     cd /custom-developments/advanced_dashboard && npm install && npm run build &&
                     cd /custom-developments/transformer_with_command && npm install && npm run build"
    environment:
      - NODE_OPTIONS=--max-old-space-size=10000
    volumes:
      - ../src/cs_data_processor:/cs_data_processor
      - ../src/cs_custom_processor:/cs_custom_processor
      - ../src/config_server_for_excel:/config_server_for_excel
      - ../src/server_realtime_auth:/server_realtime_auth
      - ../src/alarm_beep:/alarm_beep
      - ../src/oshmi2json:/oshmi2json
      - ../src/telegraf-listener:/telegraf-listener
      - ../src/OPC-UA-Server:/OPC-UA-Server
      - ../src/mqtt-sparkplug:/mqtt-sparkplug
      - ../src/AdminUI:/AdminUI
      - ../src/custom-developments/:/custom-developments

